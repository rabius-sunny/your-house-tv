datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  email    String @unique
  password String
}

model Gallery {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  fileId    String   @unique
  url       String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Network {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  thumbnail  String
  isFeatured Boolean @default(false)
  city       City[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model City {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  thumbnail  String
  isFeatured Boolean   @default(false)
  network    Network   @relation(fields: [networkId], references: [id], onDelete: Cascade)
  networkId  String    @db.ObjectId
  channels   Channel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Channel {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  thumbnail   String
  description String
  isFeatured  Boolean   @default(false)
  cityId      String    @db.ObjectId
  city        City      @relation(fields: [cityId], references: [id], onDelete: Cascade)
  stations    Station[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Station {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  thumbnail  String
  startedAt  DateTime
  endedAt    DateTime
  videos     String[]
  isFeatured Boolean  @default(false)
  channelId  String   @db.ObjectId
  channel    Channel  @relation(fields: [channelId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VlogCategory {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  thumbnail   String
  isFeatured  Boolean  @default(false)
  vlogIds     String[] @db.ObjectId
  vlogs       Vlog[]   @relation(fields: [vlogIds], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vlog {
  id          String         @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  video       String
  isFeatured  Boolean        @default(false)
  categories  VlogCategory[] @relation(fields: [categoryIds], references: [id])
  categoryIds String[]       @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Settings {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  key   String @unique
  value String
}
